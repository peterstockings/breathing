[{"C:\\Bitbucket\\breathing\\src\\reportWebVitals.js":"1","C:\\Bitbucket\\breathing\\src\\App.js":"2","C:\\Bitbucket\\breathing\\src\\Settings\\Settings.js":"3","C:\\Bitbucket\\breathing\\src\\Breath\\BreathProgress.js":"4","C:\\Bitbucket\\breathing\\src\\Breath\\Breath.js":"5","C:\\Bitbucket\\breathing\\src\\index.js":"6","C:\\Bitbucket\\breathing\\src\\util.js":"7","C:\\Bitbucket\\breathing\\src\\serviceWorkerRegistration.js":"8","C:\\Bitbucket\\breathing\\src\\Modal.js":"9","C:\\Bitbucket\\breathing\\src\\Accordion.js":"10","C:\\Bitbucket\\breathing\\src\\localStorage.js":"11","C:\\Bitbucket\\breathing\\src\\defaults.js":"12","C:\\Bitbucket\\breathing\\src\\Settings\\BreathingStageDropDown.js":"13","C:\\Bitbucket\\breathing\\src\\Settings\\LabelAndSlider.js":"14"},{"size":362,"mtime":1608724603156,"results":"15","hashOfConfig":"16"},{"size":1086,"mtime":1609764373658,"results":"17","hashOfConfig":"16"},{"size":4534,"mtime":1609763220063,"results":"18","hashOfConfig":"16"},{"size":1132,"mtime":1609668075860,"results":"19","hashOfConfig":"16"},{"size":2194,"mtime":1609765745907,"results":"20","hashOfConfig":"16"},{"size":863,"mtime":1609579546631,"results":"21","hashOfConfig":"16"},{"size":1010,"mtime":1609763729548,"results":"22","hashOfConfig":"16"},{"size":5999,"mtime":1609579483050,"results":"23","hashOfConfig":"16"},{"size":474,"mtime":1609638435410,"results":"24","hashOfConfig":"16"},{"size":3224,"mtime":1609730637213,"results":"25","hashOfConfig":"16"},{"size":526,"mtime":1609766592443,"results":"26","hashOfConfig":"16"},{"size":2709,"mtime":1609765454434,"results":"27","hashOfConfig":"16"},{"size":1842,"mtime":1609748047998,"results":"28","hashOfConfig":"16"},{"size":526,"mtime":1609748137297,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ms2gsc",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Bitbucket\\breathing\\src\\reportWebVitals.js",[],"C:\\Bitbucket\\breathing\\src\\App.js",[],"C:\\Bitbucket\\breathing\\src\\Settings\\Settings.js",["61","62","63","64","65"],"import '../App.css';\r\nimport 'bulma/css/bulma.css'\r\nimport { useState } from 'react';\r\nimport { uuid, getCurrentPosition, getTimerFn } from '../util'\r\nimport Modal from '../Modal'\r\nimport ActionsInAccordionSummary from '../Accordion'\r\nimport { ButtonDropdown, DropdownToggle } from 'reactstrap';\r\nimport { createDefaultExercise } from '../defaults'\r\nimport BreathingStageDropDown from './BreathingStageDropDown'\r\nimport LabelAndSlider from './LabelAndSlider'\r\n\r\nfunction Settings(props) {\r\n    const updateState = props.updateState\r\n\r\n    const [newExercise, updateNewExercise] = useState(createDefaultExercise())\r\n\r\n    const updateExerciseName = (name) => updateNewExercise({ ...newExercise, name })\r\n\r\n    const getDuration = (id) => newExercise.exercise.find(s => s.id === id)?.duration || 0\r\n\r\n    const handleChange = (id, newValue) => updateNewExercise(\r\n        {\r\n            ...newExercise,\r\n            exercise: newExercise.exercise.map(s => s.id === id ? { ...s, duration: newValue } : s)\r\n        }\r\n    )\r\n\r\n    const handleDelete = (id) => updateNewExercise(\r\n        {\r\n            ...newExercise,\r\n            exercise: newExercise.exercise.filter(s => s.id !== id)\r\n        }\r\n    )\r\n\r\n    const deleteExercise = (id) => {\r\n        props.updateExercises(props.exercises.filter(s => s.id !== id))\r\n    }\r\n\r\n    const [exercises, setExercises] = useState(props.exercises)\r\n    const [dropdownOpen, setOpen] = useState(false);\r\n    const [isModalVisible, setModalVisibility] = useState(false)\r\n\r\n    const handleClick = () => {\r\n        setModalVisibility(false);\r\n        props.updateExercises(props.exercises.concat(newExercise))\r\n        updateNewExercise(createDefaultExercise())\r\n    }\r\n\r\n    const [states, setStates] = useState(props.states)\r\n\r\n    const toggle = () => setOpen(!dropdownOpen);\r\n\r\n    const addStage = (name) => {\r\n        updateNewExercise(\r\n            {\r\n                ...newExercise,\r\n                exercise: newExercise.exercise.concat({\r\n                    name,\r\n                    f: getTimerFn(name, newExercise.exercise),\r\n                    duration: 1,\r\n                    idx: newExercise.exercise.reduce((a, c) => c.idx > a ? c.idx : a, 0) + 1,\r\n                    id: uuid()\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"title is-2\">Breathing</h2>\r\n\r\n            <Modal isActive={isModalVisible} close={e => setModalVisibility(false)}>\r\n                <div className=\"box\">\r\n                    <div className=\"field\">\r\n                        <label className=\"label\">Name</label>\r\n                        <div className=\"control\">\r\n                            <input className=\"input\" type=\"text\" value={newExercise.name} onChange={(e) => updateExerciseName(e.target.value)} placeholder=\"Breathing exercise name\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {newExercise.exercise.map(s =>\r\n                        <LabelAndSlider\r\n                            name={s.name}\r\n                            value={getDuration(s.id)}\r\n                            onChange={(event, newValue) => handleChange(s.id, newValue)}\r\n                            onDelete={event => handleDelete(s.id)}\r\n                            key={s.id}\r\n                        />\r\n                    )}\r\n\r\n                    <ButtonDropdown isOpen={dropdownOpen} toggle={toggle} style={{ float: 'right' }}>\r\n                        <DropdownToggle caret>\r\n                            Add\r\n                            </DropdownToggle>\r\n                        <BreathingStageDropDown states={newExercise.exercise} addStage={addStage} />\r\n                    </ButtonDropdown>\r\n\r\n                    <button disabled={newExercise.exercise.length === 0 || getCurrentPosition(newExercise.exercise) !== 0 || newExercise.name.length === 0} className=\"button is-dark\" onClick={handleClick}>Save</button>\r\n                </div>\r\n            </Modal>\r\n\r\n            <ActionsInAccordionSummary exercises={props.exercises} onSelect={updateState} onDelete={deleteExercise} />\r\n\r\n            <a href=\"#\" className=\"float\" onClick={e => setModalVisibility(true)} >\r\n                <i className=\"fa fa-plus my-float\"></i>\r\n                <div className=\"label-container\">\r\n                    <div className=\"label-text\">New exercise</div>\r\n                    <i className=\"fa fa-play label-arrow\"></i>\r\n                </div>\r\n            </a>\r\n\r\n        </div>);\r\n}\r\n\r\nexport default Settings;","C:\\Bitbucket\\breathing\\src\\Breath\\BreathProgress.js",[],"C:\\Bitbucket\\breathing\\src\\Breath\\Breath.js",["66"],"C:\\Bitbucket\\breathing\\src\\index.js",[],["67","68"],"C:\\Bitbucket\\breathing\\src\\util.js",["69","70","71","72","73","74"],"import { Breathing, timerFunctions } from './defaults'\r\n\r\nexport const uuid = () => {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n    );\r\n}\r\n\r\nexport const getLast = (arr = null, n = null) => { if (arr == null) return void 0; if (n === null) return arr[arr.length - 1]; return arr.slice(Math.max(arr.length - n, 0)); };\r\n\r\nexport const getCurrentPosition = (states) => {\r\n    let mappings = {\r\n        'In': 1,\r\n        'Hold': 0,\r\n        'Out': -1,\r\n    }\r\n    return states.reduce((a, c) => a + mappings[c.name], 0)\r\n}\r\n\r\nexport const getTimerFn = (name, exerciseList) => {\r\n    if (name === 'In')\r\n        return t => t\r\n    if (name === 'Out')\r\n        return t => (1 - t) < 0.01 ? 0.01 : 1 - t\r\n    if (name === 'Hold') {\r\n        let pos = getCurrentPosition(exerciseList)\r\n        if (pos === 0)\r\n            return t => 0.01\r\n        if (pos === 1)\r\n            return t => 1\r\n    }\r\n}","C:\\Bitbucket\\breathing\\src\\serviceWorkerRegistration.js",[],"C:\\Bitbucket\\breathing\\src\\Modal.js",[],"C:\\Bitbucket\\breathing\\src\\Accordion.js",[],"C:\\Bitbucket\\breathing\\src\\localStorage.js",[],"C:\\Bitbucket\\breathing\\src\\defaults.js",["75"],"C:\\Bitbucket\\breathing\\src\\Settings\\BreathingStageDropDown.js",[],"C:\\Bitbucket\\breathing\\src\\Settings\\LabelAndSlider.js",["76","77"],{"ruleId":"78","severity":1,"message":"79","line":39,"column":12,"nodeType":"80","messageId":"81","endLine":39,"endColumn":21},{"ruleId":"78","severity":1,"message":"82","line":39,"column":23,"nodeType":"80","messageId":"81","endLine":39,"endColumn":35},{"ruleId":"78","severity":1,"message":"83","line":49,"column":12,"nodeType":"80","messageId":"81","endLine":49,"endColumn":18},{"ruleId":"78","severity":1,"message":"84","line":49,"column":20,"nodeType":"80","messageId":"81","endLine":49,"endColumn":29},{"ruleId":"85","severity":1,"message":"86","line":104,"column":13,"nodeType":"87","endLine":104,"endColumn":84},{"ruleId":"88","severity":1,"message":"89","line":43,"column":8,"nodeType":"90","endLine":43,"endColumn":10,"suggestions":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"78","severity":1,"message":"96","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":19},{"ruleId":"78","severity":1,"message":"97","line":1,"column":21,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"98","severity":1,"message":"99","line":5,"column":12,"nodeType":"100","messageId":"101","endLine":5,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":5,"column":59,"nodeType":"100","messageId":"101","endLine":5,"endColumn":60},{"ruleId":"98","severity":1,"message":"102","line":5,"column":59,"nodeType":"100","messageId":"101","endLine":5,"endColumn":60},{"ruleId":"98","severity":1,"message":"102","line":5,"column":64,"nodeType":"100","messageId":"101","endLine":5,"endColumn":66},{"ruleId":"103","severity":1,"message":"104","line":19,"column":5,"nodeType":"105","messageId":"106","endLine":19,"endColumn":39},{"ruleId":"107","severity":1,"message":"108","line":7,"column":17,"nodeType":"87","endLine":7,"endColumn":91},{"ruleId":"85","severity":1,"message":"109","line":7,"column":17,"nodeType":"87","endLine":7,"endColumn":91},"no-unused-vars","'exercises' is assigned a value but never used.","Identifier","unusedVar","'setExercises' is assigned a value but never used.","'states' is assigned a value but never used.","'setStates' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.","ArrayExpression",["110"],"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'Breathing' is defined but never used.","'timerFunctions' is defined but never used.","no-mixed-operators","Unexpected mix of '^' and '&'.","BinaryExpression","unexpectedMixedOperator","Unexpected mix of '&' and '>>'.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"113","fix":"114"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [draw]",{"range":"115","text":"116"},[1281,1283],"[draw]"]