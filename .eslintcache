[{"C:\\Bitbucket\\breathing\\src\\reportWebVitals.js":"1","C:\\Bitbucket\\breathing\\src\\App.js":"2","C:\\Bitbucket\\breathing\\src\\Settings\\Settings.js":"3","C:\\Bitbucket\\breathing\\src\\Breath\\BreathProgress.js":"4","C:\\Bitbucket\\breathing\\src\\Breath\\Breath.js":"5","C:\\Bitbucket\\breathing\\src\\index.js":"6","C:\\Bitbucket\\breathing\\src\\util.js":"7","C:\\Bitbucket\\breathing\\src\\serviceWorkerRegistration.js":"8","C:\\Bitbucket\\breathing\\src\\Modal.js":"9","C:\\Bitbucket\\breathing\\src\\Accordion.js":"10"},{"size":362,"mtime":1608724603156,"results":"11","hashOfConfig":"12"},{"size":2948,"mtime":1609668651163,"results":"13","hashOfConfig":"12"},{"size":6716,"mtime":1609671219164,"results":"14","hashOfConfig":"12"},{"size":1132,"mtime":1609668075860,"results":"15","hashOfConfig":"12"},{"size":2117,"mtime":1609293924651,"results":"16","hashOfConfig":"12"},{"size":863,"mtime":1609579546631,"results":"17","hashOfConfig":"12"},{"size":211,"mtime":1609291616699,"results":"18","hashOfConfig":"12"},{"size":5999,"mtime":1609579483050,"results":"19","hashOfConfig":"12"},{"size":474,"mtime":1609638435410,"results":"20","hashOfConfig":"12"},{"size":2814,"mtime":1609671247924,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ms2gsc",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Bitbucket\\breathing\\src\\reportWebVitals.js",[],"C:\\Bitbucket\\breathing\\src\\App.js",[],"C:\\Bitbucket\\breathing\\src\\Settings\\Settings.js",["44","45","46","47"],"C:\\Bitbucket\\breathing\\src\\Breath\\BreathProgress.js",[],"C:\\Bitbucket\\breathing\\src\\Breath\\Breath.js",["48"],"import '../App.css';\r\nimport 'bulma/css/bulma.css'\r\nimport BreathProgress from './BreathProgress';\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nfunction Breath(props) {\r\n    const states = props.states\r\n    const displaySettings = props.displaySettings\r\n\r\n    const [scale, setScale] = useState(0)\r\n    const [stage, setStage] = useState('')\r\n\r\n    const timeStampRef = useRef(performance.now())\r\n\r\n    const requestRef = useRef()\r\n\r\n    let totalTime = 0\r\n    for (const state of states) {\r\n        totalTime += state.duration\r\n        state.endTime = totalTime\r\n    }\r\n\r\n    const draw = (t) => {\r\n        const time = (t - timeStampRef.current) / 1000 % totalTime\r\n\r\n        const state = states.find(s => time < s.endTime)\r\n\r\n        const startTime = state.endTime - state.duration\r\n        const radius = state.f((time - startTime) / state.duration)\r\n        const scaled = Math.sin(Math.sin(radius * Math.PI / 2))\r\n\r\n        setScale(scaled.toFixed(4))\r\n        setStage(state.id)\r\n\r\n        requestAnimationFrame(draw)\r\n    }\r\n\r\n    useEffect(() => {\r\n        requestRef.current = requestAnimationFrame(draw);\r\n        return () => cancelAnimationFrame(requestRef.current);\r\n    }, []);\r\n\r\n    const resetTimer = e => {\r\n        timeStampRef.current = performance.now()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"button is-info is-light\" onClick={displaySettings}>\r\n                <span className=\"icon is-small\">\r\n                    <i className=\"fa fa-arrow-left\"></i>\r\n                </span>\r\n            </button>\r\n            <button className=\"button is-info is-light\" style={{ float: 'right' }} onClick={resetTimer}>\r\n                <span className=\"icon is-small\">\r\n                    <i className=\"fa fa-refresh\"></i>\r\n                </span>\r\n            </button>\r\n            <svg viewBox=\"-1 -1 2 2\" preserveAspectRatio=\"xMidYMid meet\" style={{ transform: `scale(${scale})` }}>\r\n                <circle r=\"1\"></circle>\r\n            </svg>\r\n\r\n            <BreathProgress states={states} stage={stage} />\r\n        </div >);\r\n}\r\n\r\nexport default Breath;","C:\\Bitbucket\\breathing\\src\\index.js",[],"C:\\Bitbucket\\breathing\\src\\util.js",["49","50","51","52"],"function uuid() {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n    );\r\n}\r\n\r\nexport default uuid;","C:\\Bitbucket\\breathing\\src\\serviceWorkerRegistration.js",[],"C:\\Bitbucket\\breathing\\src\\Modal.js",[],"C:\\Bitbucket\\breathing\\src\\Accordion.js",[],{"ruleId":"53","severity":1,"message":"54","line":25,"column":17,"nodeType":"55","endLine":25,"endColumn":91},{"ruleId":"56","severity":1,"message":"57","line":25,"column":17,"nodeType":"55","endLine":25,"endColumn":91},{"ruleId":"58","severity":1,"message":"59","line":77,"column":23,"nodeType":"60","messageId":"61","endLine":77,"endColumn":35},{"ruleId":"56","severity":1,"message":"62","line":156,"column":13,"nodeType":"55","endLine":156,"endColumn":84},{"ruleId":"63","severity":1,"message":"64","line":42,"column":8,"nodeType":"65","endLine":42,"endColumn":10,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":3,"column":12,"nodeType":"69","messageId":"70","endLine":3,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":3,"column":59,"nodeType":"69","messageId":"70","endLine":3,"endColumn":60},{"ruleId":"67","severity":1,"message":"71","line":3,"column":59,"nodeType":"69","messageId":"70","endLine":3,"endColumn":60},{"ruleId":"67","severity":1,"message":"71","line":3,"column":64,"nodeType":"69","messageId":"70","endLine":3,"endColumn":66},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'setExercises' is assigned a value but never used.","Identifier","unusedVar","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'draw'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-mixed-operators","Unexpected mix of '^' and '&'.","BinaryExpression","unexpectedMixedOperator","Unexpected mix of '&' and '>>'.",{"desc":"73","fix":"74"},"Update the dependencies array to be: [draw]",{"range":"75","text":"76"},[1204,1206],"[draw]"]